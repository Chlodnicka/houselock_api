# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\EventSubscriber\ExtensionSubscriber:
        arguments: ["@security.authorization_checker"]
        tags:
          - { name: kernel.event_listener, event: kernel.controller }

    AppBundle\Security\CorsListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    # SERVICES
    AppBundle\Service\MailerService:
        arguments:
            $mailAppKey: '%mail_app_key%'
            $mailAppSecret: '%mail_app_secret%'
#
#    flat_service:
#        class: AppBundle\Service\FlatService
#        arguments: ['@flat_repository']
#
#    user_service:
#        class: AppBundle\Service\UserService
#        arguments: ['@user_repository']
#
#    user_bill_service:
#        class: AppBundle\Service\UserBillService
#        arguments: ['@user_bill_repository']

    # REPOSITORY

#    repository:
#        class: AppBundle\Repository\Repository
#
#    bill_repository:
#        class: AppBundle\Repository\BillRepository
#
#    flat_repository:
#        class: AppBundle\Repository\FlatRepository
#
#    user_repository:
#        class: AppBundle\Repository\UserRepository
#
#    user_bill_repository:
#        class: AppBundle\Repository\UserBillRepository

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
